name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-22.04
    env:
      HUGO_VERSION: 0.122.0
      SOPS_VERSION: 3.8.1
      SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
    steps:
      - name: Install SOPS
        run: |
          curl -sLO https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64
          mv sops-v${SOPS_VERSION}.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops
      - name: Install Hugo CLI
        run: |
          curl -sL -o ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        if: ${{ !env.ACT }}
        run: |
          sudo snap install dart-sass || true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        if: ${{ !env.ACT }}
        id: pages
        uses: actions/configure-pages@v4
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          make render BASE_URL="${{ steps.pages.outputs.base_url }}"
      - name: Upload Github Artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
      # Workaround for https://github.com/nektos/act/issues/329
      # Discussed in https://github.com/nektos/act/issues/2135
      - name: Upload Local Artifact
        if: ${{ env.ACT }}
        uses: actions/upload-pages-artifact@v2
        with:
          name: public
          path: ./public

  # Deployment job
  deploy:
    if: ${{ !github.event.act }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
